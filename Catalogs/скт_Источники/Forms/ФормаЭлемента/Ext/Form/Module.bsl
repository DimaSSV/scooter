 
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда	
		Возврат;	
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	ПриСозданииПриЧтенииНаСервере(Параметры.ЗначениеКопирования);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ЭтотОбъект.Параметры.Свойство("ТолькоПросмотр") Тогда
		ПриСозданииПриЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Элементы.СтраницаЗапрос.Видимость Тогда
		скт_ОбщегоНазначенияВызовСервера.ЭтоВалидныйТекстЗапроса(ТекстЗапроса,,,ОшибкаЗапроса);
		Элементы.ОшибкаЗапроса.Видимость = Не ПустаяСтрока(ОшибкаЗапроса);
		Если Элементы.ОшибкаЗапроса.Видимость Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Элементы.СтраницаЗапрос.Видимость И Не ПустаяСтрока(ОшибкаЗапроса) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОшибкаЗапроса;
		Сообщение.Поле = "ТекстЗапроса";
		Сообщение.УстановитьДанные(ТекущийОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	СохранитьСхему(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Типзнч(ВыбранноеЗначение) = Тип("СхемаКомпоновкиДанных") Тогда
		скт_КомпоновкаДанныхКлиентСервер.УстановитьСхемуКомпоновкиВФорме(ЭтотОбъект, ВыбранноеЗначение, АдресСхемы, Компоновщик);
		НастроитьЭлементыФормы();
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстЗапросаПриИзменении(Элемент)
	скт_ОбщегоНазначенияВызовСервера.ЭтоВалидныйТекстЗапроса(ТекстЗапроса,,,ОшибкаЗапроса);
	Элементы.ОшибкаЗапроса.Видимость = Не ПустаяСтрока(ОшибкаЗапроса);
	Если Элементы.ОшибкаЗапроса.Видимость Тогда
		Возврат;
	КонецЕсли;
	ЗаменитьСКДПотекстуЗапроса();
КонецПроцедуры

&НаКлиенте
Процедура ОшибкаЗапросаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МаркерОшибки = "<<?>>";
	ПозицияОшибки = СтрНайти(ОшибкаЗапроса, МаркерОшибки);
	ДлинаСтрокиОшибки = 0;
	Если ПозицияОшибки > 0 Тогда
		ДлинаСтрокиОшибки = СтрДлина(Сред(ОшибкаЗапроса, ПозицияОшибки + 5));
	КонецЕсли;
	
	ОкончаниеКоординат = СтрНайти(ОшибкаЗапроса, "}");
	Координаты = Лев(ОшибкаЗапроса, ОкончаниеКоординат);
	Координаты = СтрЗаменить(Координаты, "{(", "");
	Координаты = СтрЗаменить(Координаты, ")}", "");
	Координаты = СтрЗаменить(Координаты, " ", "");
	МассивКоординат = СтрРазделить(Координаты, ",");
	Элементы.ТекстЗапроса.УстановитьГраницыВыделения(Число(МассивКоординат[0]), Число(МассивКоординат[1]), Число(МассивКоординат[0]), Число(МассивКоординат[1]) + ДлинаСтрокиОшибки);
	ЭтаФорма.ТекущийЭлемент = Элементы.ТекстЗапроса;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура Форматировать(Команда)
	текстВопроса = "При форматировании будут удалены все комментарии в теле запроса. Продолжить?";
	Если Ждать ВопросАсинх(текстВопроса, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	скт_ОбщегоНазначенияВызовСервера.ЭтоВалидныйТекстЗапроса(ТекстЗапроса,,Истина);
	ТекстЗапросаПриИзменении(Элементы.ТекстЗапроса);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКомментарий(Команда)
	
	НачалоСтроки = 0; НачалоКолонки = 0; КонецСтроки = 0; КонецКолонки = 0;
	Элементы.ТекстЗапроса.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);		
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстЗапроса);
	Для Сч = НачалоСтроки По КонецСтроки Цикл
		текСтрока = ТекстовыйДокумент.ПолучитьСтроку(Сч);
		текСтрока = "//" + текСтрока;
		ТекстовыйДокумент.ЗаменитьСтроку(Сч, текСтрока);
	КонецЦикла;
	ТекстЗапроса = ТекстовыйДокумент.ПолучитьТекст();
	Модифицированность = Истина;
	ТекстЗапросаПриИзменении(Элементы.ТекстЗапроса);
	Элементы.ТекстЗапроса.УстановитьГраницыВыделения(НачалоСтроки, 1, КонецСтроки, 1);
	ТекущийЭлемент = Элементы.ТекстЗапроса;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКомментарий(Команда)
	
	НачалоСтроки = 0; НачалоКолонки = 0; КонецСтроки = 0; КонецКолонки = 0;
	Элементы.ТекстЗапроса.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);		
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстЗапроса);
	Для Сч = НачалоСтроки По КонецСтроки Цикл
		текСтрока = ТекстовыйДокумент.ПолучитьСтроку(Сч);
		Если Не СтрНачинаетсяС(СокрЛ(текСтрока), "//") Тогда
			Продолжить;
		КонецЕсли;
		Позиция = СтрНайти(текСтрока, "//");
		Если Позиция > 0 Тогда
			текСтрока = Лев(текСтрока, Позиция-1) + Сред(текСтрока, Позиция + 2);
		КонецЕсли;
		ТекстовыйДокумент.ЗаменитьСтроку(Сч, текСтрока);
	КонецЦикла;
	ТекстЗапроса = ТекстовыйДокумент.ПолучитьТекст();
	Модифицированность = Истина;
	ТекстЗапросаПриИзменении(Элементы.ТекстЗапроса);
	Элементы.ТекстЗапроса.УстановитьГраницыВыделения(НачалоСтроки, 1, КонецСтроки, 1);
	ТекущийЭлемент = Элементы.ТекстЗапроса;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КонструкторЗапроса(Команда)
	
	Конструктор = Новый КонструкторЗапроса();
	Конструктор.РежимКомпоновкиДанных = Истина;
	Если ЗначениеЗаполнено(ТекстЗапроса) Тогда 
		Конструктор.Текст = ТекстЗапроса;
	КонецЕсли;
	текст = Ждать Конструктор.ОткрытьАсинх();
	Если текст <> Неопределено И текст <> ТекстЗапроса Тогда
		ТекстЗапроса = текст;
	КонецЕсли;
	Модифицированность = Истина;
	ТекстЗапросаПриИзменении(Элементы.ТекстЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСКД(Команда)
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
	Если скт_ОбщегоНазначенияКлиент.ПроверитьЗапуститьТолстыйКлиент(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемы);
	Конструктор = Новый КонструкторСхемыКомпоновкиДанных(СхемаКомпоновкиДанных);
	Конструктор.Редактировать(ЭтотОбъект);
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСоставПользовательскихНастроек(Команда)
	
	ПараметрыФормы = Новый Структура("Компоновщик", Компоновщик);
	Обработчик = Новый ОписаниеОповещения("ПослеРедактированияСоставаПользовательскихНастроек", ЭтотОбъект);
	ОткрытьФорму("Справочник.скт_Источники.Форма.СоставПользовательскихНастроек", ПараметрыФормы, ЭтаФорма,,,,Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеРедактированияСоставаПользовательскихНастроек(Результат, ДопПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ВыбранныеПоля = ПустаяСтрока(Компоновщик.Настройки.Выбор.ИдентификаторПользовательскойНастройки) Тогда
		Компоновщик.Настройки.Выбор.ИдентификаторПользовательскойНастройки = ?(Результат.ВыбранныеПоля, Новый УникальныйИдентификатор, "");		
		Модифицированность = Истина;
	КонецЕсли;
	
	Если Результат.Отбор = ПустаяСтрока(Компоновщик.Настройки.Отбор.ИдентификаторПользовательскойНастройки) Тогда
		Компоновщик.Настройки.Отбор.ИдентификаторПользовательскойНастройки = ?(Результат.Отбор, Новый УникальныйИдентификатор, "");		
		Модифицированность = Истина;
	КонецЕсли;
	
	Если Результат.Порядок = ПустаяСтрока(Компоновщик.Настройки.Порядок.ИдентификаторПользовательскойНастройки) Тогда
		Компоновщик.Настройки.Порядок.ИдентификаторПользовательскойНастройки = ?(Результат.Порядок, Новый УникальныйИдентификатор, "");		
		Модифицированность = Истина;
	КонецЕсли;
	
	Если Результат.УсловноеОформление = ПустаяСтрока(Компоновщик.Настройки.УсловноеОформление.ИдентификаторПользовательскойНастройки) Тогда
		Компоновщик.Настройки.УсловноеОформление.ИдентификаторПользовательскойНастройки = ?(Результат.УсловноеОформление, Новый УникальныйИдентификатор, "");		
		Модифицированность = Истина;
	КонецЕсли;
	
	Если Результат.Структура = ПустаяСтрока(Компоновщик.Настройки.Структура.ИдентификаторПользовательскойНастройки) Тогда
		Компоновщик.Настройки.Структура.ИдентификаторПользовательскойНастройки = ?(Результат.Структура, Новый УникальныйИдентификатор, "");		
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры // ПослеРедактированияСоставаПользовательскихНастроек()

&НаКлиенте
Асинх Процедура КомандаЗагрузитьСхему(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = "Выберите файл схемы компоновки данных";
	ПараметрыДиалога.Фильтр = "Документ XML (*.xml)|*.xml";
	РезультатПомещения = Ждать ПоместитьФайлНаСерверАсинх(,,АдресСхемы,ПараметрыДиалога);
	Если РезультатПомещения = Неопределено Тогда
		Возврат;
	ИначеЕсли РезультатПомещения.ПомещениеФайлаОтменено Тогда
		Возврат;	
	КонецЕсли;
	
	ОбновитьСхемуПослеЗагрузкиИзФайла(РезультатПомещения.Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСхемуПослеЗагрузкиИзФайла(АдресФайлаСхемы)

	Данные = ПолучитьИзВременногоХранилища(АдресФайлаСхемы);
	УдалитьИзВременногоХранилища(АдресФайлаСхемы);
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьПоток(Данные.ОткрытьПотокДляЧтения());
	Попытка
		Схема = СериализаторXDTO.ПрочитатьXML(Чтение);	
	Исключение
		ВызватьИсключение "Не корректный формат файла СКД!";
	КонецПопытки;
	скт_КомпоновкаДанныхСервер.УстановитьСхемуКомпоновкиВФорме(ЭтотОбъект, Схема, АдресСхемы, Компоновщик);
	Модифицированность = Истина;
	НастроитьЭлементыФормы();

КонецПроцедуры // ОбновитьСхемуПослеЗагрузкиИзФайла()

&НаКлиенте
Асинх Процедура КомандаВыгрузитьСхему(Команда)
	Если ПустаяСтрока(АдресСхемы) Или Компоновщик.ПолучитьИсточникДоступныхНастроек() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресСхемыФайлом = ПоместитьТекущуюСхемуФайлом(АдресСхемы, УникальныйИдентификатор);
	ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
	ПараметрыДиалога.Заголовок = "Сохранение схемы компоновки данных";
	ПолучитьФайлССервераАсинх(АдресСхемыФайлом, СтрШаблон("%1.xml", Объект.Код), ПараметрыДиалога);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КомандаЗагрузитьНастройки(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл настроек схемы компоновки данных";
	Диалог.Фильтр = "Документ XML (*.xml)|*.xml";
	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	Если РезультатВыбора = Неопределено Или Не РезультатВыбора.Количество() Тогда
		Возврат;
	КонецЕсли;
	АдрейФайла = РезультатВыбора.Получить(0);
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(АдрейФайла);
	Попытка	
		Настройки = СериализаторXDTO.ПрочитатьXML(Чтение);
		Если Не ТипЗнч(Настройки) = Тип("НастройкиКомпоновкиДанных") Тогда
			ВызватьИсключение "Косяк";
		КонецЕсли;
	Исключение
	    ВызватьИсключение "Не подходящий формат файла настроек СКД";
	КонецПопытки;
	Компоновщик.ЗагрузитьНастройки(Настройки);
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Асинх Процедура КомандаВыгрузитьНастройки(Команда)

	Если ПустаяСтрока(АдресСхемы) Или Компоновщик.ПолучитьИсточникДоступныхНастроек() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресНастроек = ПоместитьТекущиеНастройкиФайлом();
	ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
	ПараметрыДиалога.Заголовок = "Сохранение настроек схемы компоновки данных";
	Ждать ПолучитьФайлССервераАсинх(АдресНастроек, СтрШаблон("%1.xml", Объект.Код), ПараметрыДиалога);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере(ПараметрКопирования = Неопределено)

	ЗагрузитьПараметрыОтборовНаСервере(ПараметрКопирования);
	НастроитьЭлементыФормы();

КонецПроцедуры // ПриСозданииПриЧтенииНаСервере()

&НаСервере
Процедура ЗагрузитьПараметрыОтборовНаСервере(ПараметрЗаполнения = Неопределено)

	Если ЗначениеЗаполнено(ПараметрЗаполнения) Тогда
		ДанныеЗаполнения = ПараметрЗаполнения;
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДанныеЗаполнения = Объект.Ссылка;
	КонецЕсли;
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Схема = ДанныеЗаполнения.Схема.Получить();
	КонецЕсли;
	
	Если Схема = Неопределено Тогда
		Схема = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда 
		Настройки = ДанныеЗаполнения.Настройки.Получить();
	КонецЕсли;
	Если Настройки = Неопределено Тогда
		Настройки = Схема.НастройкиПоУмолчанию;
	КонецЕсли;
	
	Компоновщик.ЗагрузитьНастройки(Настройки);
	
	скт_КомпоновкаДанныхСервер.УстановитьСхемуКомпоновкиВФорме(ЭтотОбъект, Схема, АдресСхемы, Компоновщик);

КонецПроцедуры // ЗагрузитьПараметрыОтборовНаСервере()

&НаСервере
Процедура НастроитьЭлементыФормы()

	Элементы.СтраницаЗапрос.Видимость = ДоступноРедактированиеЗапросом();

КонецПроцедуры // НастроитьЭлементыФормы()

&НаСервере
Функция ДоступноРедактированиеЗапросом()

	Если Компоновщик.ПолучитьИсточникДоступныхНастроек() = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Схема = ПолучитьИзВременногоХранилища(АдресСхемы);
	Если Схема.НаборыДанных.Количество() > 1 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Схема.НаборыДанных.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;	
	
	ЭтоЗапрос = ТипЗнч(Схема.НаборыДанных[0]) = Тип("НаборДанныхЗапросСхемыКомпоновкиДанных");
	Если ЭтоЗапрос Тогда
		ТекстЗапроса = Схема.НаборыДанных[0].Запрос;
		скт_ОбщегоНазначенияВызовСервера.ЭтоВалидныйТекстЗапроса(ТекстЗапроса,,,ОшибкаЗапроса);
		Элементы.ОшибкаЗапроса.Видимость = Не ПустаяСтрока(ОшибкаЗапроса);
	КонецЕсли;
	Возврат ЭтоЗапрос;

КонецФункции // ДоступноРедактированиеЗапросом()

&НаСервере
Процедура СохранитьСхему(ТекущийОбъект)

	ТекущийОбъект.Схема = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемы));
	ТекущийОбъект.Настройки = Новый ХранилищеЗначения(Компоновщик.ПолучитьНастройки());

КонецПроцедуры // СохранитьСхему()

&НаСервере
Процедура ЗаменитьСКДПотекстуЗапроса()

	Если ЭтоАдресВременногоХранилища(АдресСхемы) Тогда
		Схема = ПолучитьИзВременногоХранилища(АдресСхемы);
		ПолучитьИзВременногоХранилища(АдресСхемы).НаборыДанных[0].Запрос = ТекстЗапроса;
	Иначе
		Схема = скт_КомпоновкаДанныхСервер.НоваяСхемаПоТекстуЗапроса(ТекстЗапроса);
	КонецЕсли;
	
	скт_КомпоновкаДанныхСервер.УстановитьСхемуКомпоновкиВФорме(ЭтотОбъект, Схема, АдресСхемы, Компоновщик);
	Модифицированность = Истина;

КонецПроцедуры // ЗаменитьСКДПотекстуЗапроса()

&НаСервереБезКонтекста
Функция ПоместитьТекущуюСхемуФайлом(АдресСхемы, ИДФормы)

	Поток = Новый ПотокВПамяти;
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьПоток(Поток);
	СериализаторXDTO.ЗаписатьXML(Запись, ПолучитьИзВременногоХранилища(АдресСхемы));
	Запись.Закрыть();
	Возврат ПоместитьВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные(), ИДФормы);

КонецФункции // ПоместитьТекущуюСхемуФайлом()

&НаСервере
Функция ПоместитьТекущиеНастройкиФайлом()

	Настройки = Компоновщик.ПолучитьНастройки();
	Поток = Новый ПотокВПамяти;
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьПоток(Поток);
	СериализаторXDTO.ЗаписатьXML(Запись, Настройки);
	Запись.Закрыть();
	Возврат ПоместитьВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные(), УникальныйИдентификатор);
	

КонецФункции // ПоместитьТекущиеНастройкиФайлом()


#КонецОбласти
