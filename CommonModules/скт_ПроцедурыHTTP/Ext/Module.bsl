

#Область ПрограммныйИнтерфейс

Процедура ПодготовитьОтветОшибка(Ответ, текстОшибки, Состояние = 500) Экспорт

	Ответ.Заголовки["Content-Type"] = "text/html; charset=utf-8";
	Ответ.УстановитьТелоИзСтроки(текстОшибки, КодировкаТекста.UTF8);
	Ответ.КодСостояния = Состояние;

КонецПроцедуры

Процедура УстановитьТипКонтентаПоРасширениюФайла(Ответ, Расширение) Экспорт

	Если НРег(Расширение) = "zip" Тогда
		Content_Type = "application/zip";
	ИначеЕсли НРег(Расширение) = "mxl" Тогда
		Content_Type = "application/octet-stream";
	ИначеЕсли НРег(Расширение) = "pdf" Тогда
		Content_Type = "application/pdf";
	ИначеЕсли НРег(Расширение) = "xlsx" Тогда
		Content_Type = "application/octet-stream";
	ИначеЕсли НРег(Расширение) = "ods" Тогда
		Content_Type = "application/octet-stream";
	ИначеЕсли НРег(Расширение) = "docx" Тогда
		Content_Type = "application/octet-stream";
	ИначеЕсли НРег(Расширение) = "csv" Тогда
		Content_Type = "text/csv";
	ИначеЕсли НРег(Расширение) = "xml" Тогда
		Content_Type = "application/xml";
	ИначеЕсли НРег(Расширение) = "json" Тогда
		Content_Type = "application/json";	
	Иначе
		// ANSI
		Ответ.Заголовки["Content-Type"] = "text/plain";
		Возврат;
	КонецЕсли;
	
	Ответ.Заголовки["Content-Type"] = Content_Type + "; charset=UTF-8";

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗалогироватьОшибку(ТекстОшибки, Событие = "Вызов http метода") Экспорт
	скт_ОбщегоНазначенияСервер.ЗаписатьВЖурнал(Событие, ТекстОшибки, "Ошибка");	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти