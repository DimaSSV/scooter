
#Область ПрограммныйИнтерфейс

// Функция - Создаёт объект внешней обработки для произвольного алгоритма
//
// Параметры:
//  Ссылка	 - СправочникСсылка.скт_ПроизвольныеАлгоритмы - Ссылка на алгоритм, обработку которого необходимо создать
// 
// Возвращаемое значение:
//  ОбработкаОбъект, ВнешняяОбработкаОбъект - Созданная обработка произвольного алгоритма
//
Функция ОбъектВнешнейОбработки(Ссылка) Экспорт

	Если Ссылка.Расположение = Перечисления.скт_ВариантыРасположенияАлгоритмов.ВнешнийФайл Тогда
		// Подключение
		ИмяОбработки = ПодключитьВнешнююОбработку(Ссылка);
		
		// Проверка корректности переданных параметров.
		Если ИмяОбработки = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Возврат ВнешниеОбработки.Создать(ИмяОбработки);
		
	Иначе
		
		Возврат Обработки[Ссылка.ИмяВстроеннойОбработки].Создать();
		
	КонецЕсли;

КонецФункции // ОбъектВнешнейОбработки()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодключитьВнешнююОбработку(Ссылка)

#Если ТолстыйКлиентОбычноеПриложение Тогда
	ИмяОбработки = ПолучитьИмяВременногоФайла();
	ХранилищеОбработки = Ссылка.ХранилищеФайла;
	ДвоичныеДанные = ХранилищеОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяОбработки);
	Возврат ИмяОбработки;
#КонецЕсли

	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Ссылка.ХранилищеФайла.Получить());
	ИмяОбработки = ВнешниеОбработки.Подключить(АдресВоВременномХранилище, , Ложь);
	Возврат ИмяОбработки;

КонецФункции // ПодключитьВнешнююОбработку()

#КонецОбласти