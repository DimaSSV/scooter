
#Область ПрограммныйИнтерфейс

Функция ТекущееРасширение() Экспорт

	Найденные = РасширенияКонфигурации.Получить(Новый Структура("Имя", скт_ОбщегоНазначения.ИмяРасширенияСамокат()));
	Если Найденные.Количество() = 0 Тогда
		ВызватьИсключение "Не удалось найти расширение ""Самокат""";
	КонецЕсли;
	Возврат Найденные.Получить(0);

КонецФункции // ТекущееРасширение()


// Возвращает Истина, если функциональная подсистема существует в конфигурации.
// Предназначена для реализации вызова необязательной подсистемы (условного вызова).
// У функциональной подсистемы снят флажок "Включать в командный интерфейс".
// См. также ОбщегоНазначенияПереопределяемый.ПриОпределенииОтключенныхПодсистем
// и ОбщегоНазначенияКлиент.ПодсистемаСуществует для вызова из клиентского кода.
//
// Параметры:
//  ПолноеИмяПодсистемы - Строка - полное имя объекта метаданных подсистема
//                        без слов "Подсистема." и с учетом регистра символов.
//                        Например: "СтандартныеПодсистемы.ВариантыОтчетов".
//
// Пример:
//  Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВариантыОтчетов") Тогда
//  	МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
//  	МодульВариантыОтчетов.<Имя метода>();
//  КонецЕсли;
//
// Возвращаемое значение:
//  Булево - Истина, если подсистема существует.
//
Функция ПодсистемаСуществует(ПолноеИмяПодсистемы) Экспорт
	
	ИменаПодсистем = скт_ОбщегоНазначенияПовтИсп.ИменаПодсистем();
	Возврат ИменаПодсистем.Получить(ПолноеИмяПодсистемы) <> Неопределено;
	
КонецФункции

// Выполняет сериализацию объекта в XML
//
// Параметры:
//  Значение  - Произвольный - объект, который необходимо сериализовать в XML.
//
// Возвращаемое значение:
//   Строка   - объект, сериализованный в XML.
//
Функция ПолучитьXML(Значение) Экспорт
	
	Запись = Новый ЗаписьXML();
	Запись.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Запись, Значение);
	Возврат Запись.Закрыть();
	
КонецФункции

// Функция - Просто десериализация xml текста в объект 1С с помощью сериализатора XDTO. 
//
// Параметры:
//  XMLСтрока	 - Строка -  XML, по которому необходимо получить объект
// 
// Возвращаемое значение:
//  Произвольное - Результат десериализации
//
Функция ПолучитьОбъектПоXML(XMLСтрока) Экспорт

	Чтение = Новый ЧтениеXML();
	Чтение.УстановитьСтроку(XMLСтрока);
	Возврат СериализаторXDTO.ПрочитатьXML(Чтение);

КонецФункции // ПолучитьОбъектПоXML()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьВЖурнал(вИмяСобытия, вКомментарий, вУровеньЖурнала = "Информация", 
	вДанные = Неопределено, вМетаданные = Неопределено) Экспорт
	Уровень = УровеньЖурналаРегистрации[вУровеньЖурнала];
	ЗаписьЖурналаРегистрации(СтрШаблон("Самокат.%1", вИмяСобытия), Уровень, вМетаданные, вДанные, вКомментарий);	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
