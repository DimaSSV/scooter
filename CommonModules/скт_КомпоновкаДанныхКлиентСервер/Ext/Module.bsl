
#Область ПрограммныйИнтерфейс

#Если Не ТонкийКлиент И Не ВебКлиент Тогда

Функция УстановитьСхемуКомпоновкиВФорме(ЭтотОбъект, СхемаКомпоновки, АдресСхемыКомпоновки, КомпоновщикНастроек = Неопределено, ПриОшибкеЗагружатьПустуюСхему = Истина,
	УдалятьНедоступныеНастройки = Ложь) Экспорт 
	
	Если КомпоновщикНастроек = Неопределено Тогда
		КомпоновщикНастроек = ЭтотОбъект.Компоновщик;
	КонецЕсли;
	Если ЭтоАдресВременногоХранилища(АдресСхемыКомпоновки) Тогда
		ПоместитьВоВременноеХранилище(СхемаКомпоновки, АдресСхемыКомпоновки);
	Иначе
		АдресСхемыКомпоновки = ПоместитьВоВременноеХранилище(СхемаКомпоновки, ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
	Попытка
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновки));
		Успех = Истина;
	Исключение
		//Сообщить(ОписаниеОшибки());
		Если ПриОшибкеЗагружатьПустуюСхему Тогда
			Если ЭтоАдресВременногоХранилища(АдресСхемыКомпоновки) Тогда
				ПоместитьВоВременноеХранилище(Новый СхемаКомпоновкиДанных, АдресСхемыКомпоновки);
			Иначе
				АдресСхемыКомпоновки = ПоместитьВоВременноеХранилище(Новый СхемаКомпоновкиДанных, ЭтотОбъект.УникальныйИдентификатор);
			КонецЕсли;
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновки));
		КонецЕсли; 
		Успех = Ложь;
	КонецПопытки;
	Если УдалятьНедоступныеНастройки Тогда
		СпособВосстановления = СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность;
	Иначе
		СпособВосстановления = СпособВосстановленияНастроекКомпоновкиДанных.Полное;
	КонецЕсли; 
	КомпоновщикНастроек.Восстановить(СпособВосстановления);
	Возврат Успех;
	
КонецФункции

#КонецЕсли

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

