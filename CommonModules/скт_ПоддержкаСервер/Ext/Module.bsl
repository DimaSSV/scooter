
#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьНовуюВерсиюРасширения(УРЛАктуальнойВерсии) Экспорт

	РазделительПротокола = "://";
	РазделительПути = "/";
	
	ПозицияРазделителяПротокола = СтрНайти(УРЛАктуальнойВерсии, РазделительПротокола);
	ПозицияРазделителяПути = СтрНайти(УРЛАктуальнойВерсии, РазделительПути,,ПозицияРазделителяПротокола + СтрДлина(РазделительПротокола));
	ССЛ = Неопределено;
	Если НРег(Лев(УРЛАктуальнойВерсии, ПозицияРазделителяПротокола - 1)) = "https" Тогда
		ССЛ = Новый ЗащищенноеСоединениеOpenSSL;
	КонецЕсли;
	ПозицияХост = ПозицияРазделителяПротокола + СтрДлина(РазделительПротокола);
	Хост = Сред(УРЛАктуальнойВерсии, ПозицияХост, ПозицияРазделителяПути - ПозицияХост);
	Соединение = Новый HTTPСоединение(Хост, , , , , , ССЛ);
	Запрос = Новый HTTPЗапрос(Сред(УРЛАктуальнойВерсии, ПозицияРазделителяПути));
	Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
	Если Ответ.КодСостояния > 200 И Ответ.КодСостояния < 400 Тогда
		ЗагрузитьНовуюВерсиюРасширения(Ответ.Заголовки["Location"]);
		Возврат;
	ИначеЕсли Ответ.КодСостояния >= 400 Тогда
		ВызватьИсключение "При скачивании произошла ошибка.";
	КонецЕсли;
	
	ОбновитьВерсиюРасширенияДвоичнымиДанными(Ответ.ПолучитьТелоКакДвоичныеДанные());

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьВерсиюРасширенияДвоичнымиДанными(Данные)

	Расширение = скт_ОбщегоНазначенияСервер.ТекущееРасширение();
	Расширение.Записать(Данные);

КонецПроцедуры


#КонецОбласти
