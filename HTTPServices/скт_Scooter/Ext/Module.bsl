
Функция DownloadGET(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Попытка
		
		Формат = Неопределено;
		
		ИмяМетодаПолное = Запрос.ПараметрыURL["ИмяМетода"];
		Если Не ЗначениеЗаполнено(ИмяМетодаПолное) Тогда
			текстОшибки = "Не задано имя метода";
			скт_ПроцедурыHTTP.ЗалогироватьОшибку(текстОшибки, "Поиск метода");
			скт_ПроцедурыHTTP.ПодготовитьОтветОшибка(Ответ, текстОшибки, 400);
			Возврат Ответ;
		КонецЕсли;
		
		ПозицияРазделителя = СтрНайти(ИмяМетодаПолное, ".");
		Если ПозицияРазделителя > 0 Тогда
			ИмяМетода = Лев(ИмяМетодаПолное, ПозицияРазделителя-1);
			Формат = Прав(ИмяМетодаПолное, СтрДлина(ИмяМетодаПолное) - ПозицияРазделителя);
			Если Перечисления.скт_ВариантыФорматовВыгрузки.ПоИмени(Формат) = Неопределено Тогда
				текстОшибки = "Не допустимый формат в параметре formatdata";
				скт_ПроцедурыHTTP.ЗалогироватьОшибку(текстОшибки, "Заполнение аргументов метода");
				скт_ПроцедурыHTTP.ПодготовитьОтветОшибка(Ответ, текстОшибки, 400);
				Возврат Ответ;
			КонецЕсли;
		Иначе
			ИмяМетода = ИмяМетодаПолное;
		КонецЕсли;
		
		Ссылка = Справочники.скт_Методы.НайтиПоКоду(ИмяМетода);
		Если Ссылка.Пустая() Тогда
			текстОшибки = "Метод " + ИмяМетода + " не найден";
			скт_ПроцедурыHTTP.ЗалогироватьОшибку(текстОшибки, "Поиск метода");
			скт_ПроцедурыHTTP.ПодготовитьОтветОшибка(Ответ, текстОшибки, 404);
			Возврат Ответ;
		КонецЕсли;
		
		Если Не Ссылка.Активность Тогда
			текстОшибки = "Метод " + ИмяМетода + " отключен";
			скт_ПроцедурыHTTP.ЗалогироватьОшибку(текстОшибки, "Проверка активности метода");
			скт_ПроцедурыHTTP.ПодготовитьОтветОшибка(Ответ, текстОшибки, 403);
			Возврат Ответ;
		КонецЕсли;
		
		Параметры = Новый Структура();
		Для Каждого текПараметр Из Запрос.ПараметрыЗапроса Цикл
			ИмяПараметра = НРег(текПараметр.Ключ);
			Если ИмяПараметра = "unloadingtype" Тогда
				Параметры.Вставить("СпособДоставки", текПараметр.Значение);
				//Если текПараметр.Значение = 1 Или текПараметр.Значение = "1" Тогда
				//	СпособДоставки = Перечисления.скт_СпособыДоставкиРезультата.ВыгрузкаВКаталог;
				//Иначе
				//	СпособДоставки = Перечисления.скт_СпособыДоставкиРезультата.Непосредственно;
				//КонецЕсли;
			ИначеЕсли ИмяПараметра = "unloadingpath" Тогда
				Параметры.Вставить("ПутьДляВыгрузки", текПараметр.Значение);
			ИначеЕсли ИмяПараметра = "compressed" Тогда
				Параметры.Вставить("Архивировать", текПараметр.Значение);
				//Параметры.Вставить("Архивировать", НРег(текПараметр.Значение) = "true" Или НРег(текПараметр.Значение) = "1");	
			Иначе
				Параметры.Вставить(текПараметр.Ключ, текПараметр.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если Формат <> Неопределено Тогда
			Параметры.Вставить("Формат", Формат);	
		КонецЕсли;
		
		ФорматРезультата = Неопределено;
		Справочники.скт_Методы.Вызвать(Ссылка, Ответ.ПолучитьТелоКакПоток(), Параметры, ФорматРезультата);
		скт_ПроцедурыHTTP.УстановитьТипКонтентаПоРасширениюФайла(Ответ, ФорматРезультата);
	
	Исключение
		
		ошибкаИнформация = ИнформацияОбОшибке();
		скт_ПроцедурыHTTP.ПодготовитьОтветОшибка(Ответ, КраткоеПредставлениеОшибки(ошибкаИнформация));
		скт_ПроцедурыHTTP.ЗалогироватьОшибку(ПодробноеПредставлениеОшибки(ошибкаИнформация));
		
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции



