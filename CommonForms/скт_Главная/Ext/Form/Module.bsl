

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Расширение = скт_ОбщегоНазначенияСервер.ТекущееРасширение();
	Версия = Расширение.Версия;
	Заголовок = СтрШаблон("v%1", Версия);
	Элементы.ПроверитьОбновление.Видимость = ПравоДоступа("Администрирование", Метаданные);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура СтраницаРазработки(Команда)
	Адрес = СтрШаблон("%1://%2/%3", ПротоколХТТПС(), СерверГит(), ПутьКРепозиторию());
	ЗапуститьПриложениеАсинх(Адрес);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПроверитьОбновление(Команда)
	
	Хост = СтрШаблон("api.%1", СерверГит());
	Адрес = СтрШаблон("repos/%1/releases/latest", ПутьКРепозиторию());
	Соединение = Новый HTTPСоединение(Хост,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Адрес);
	Попытка
		Результат = Ждать Соединение.ВызватьHTTPМетодАсинх(МетодGET(), Запрос);
	Исключение
		Ждать ПредупреждениеАсинх(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	Если Результат.КодСостояния <> 200 Тогда
		Ждать ПредупреждениеАсинх("Не удалось проверить информацию по обновлению.");
		Возврат;
	КонецЕсли;
	АктуальныйРелиз = ПрочитатьТелоОтветаJSON(Результат);
	ВерсияАктуальна = Версия = АктуальныйРелиз.tag_name;
	Если ВерсияАктуальна Тогда
		Ждать ПредупреждениеАсинх("Версия актуальна.");
		Возврат;
	КонецЕсли;
	
	текстВопроса = СтрШаблон("Доступна новая версия подсистемы ""Самокат"" v%1. Выполнить обновление?", АктуальныйРелиз.tag_name);
	Ответ = Ждать ВопросАсинх(текстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	Ждать ОбновитьВерсиюПодсистемыАсинх(АктуальныйРелиз);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПротоколХТТПС()
	Возврат "https";
КонецФункции // ПротоколХТТПС()

&НаКлиентеНаСервереБезКонтекста
Функция СерверГит()
	Возврат "github.com";
КонецФункции // СерверГит()

&НаКлиентеНаСервереБезКонтекста
Функция ПутьКРепозиторию()
	Возврат "DimaSSV/scooter";
КонецФункции // ПутьКРепозиторию()

&НаКлиентеНаСервереБезКонтекста
Функция МетодGET()
	Возврат "GET";
КонецФункции // МетодGET()

&НаКлиенте
Функция ПрочитатьТелоОтветаJSON(ОтветHTTP)

	Поток = ОтветHTTP.ПолучитьТелоКакПоток();
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьПоток(ПОток, КодировкаТекста.UTF8);
	Результат = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	Возврат Результат;

КонецФункции // ПрочитатьТелоОтветаJSON()

&НаКлиенте
Асинх Функция ОбновитьВерсиюПодсистемыАсинх(АктуальныйРелиз)

	ИскомыйУзел = Неопределено;
	Для Каждого текСтрока Из АктуальныйРелиз.assets Цикл
		Если НРег(текСтрока.name) = "scooter.cfe" Тогда
			ИскомыйУзел = текСтрока;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ИскомыйУзел = Неопределено Тогда
		текстПредупреждения = "Не удалось найти в описании релиза подходящую ссылку с файлом ""scooter.cfe"". Обновление отменено.";
		Ждать ПредупреждениеАсинх(текстПредупреждения);
		Возврат Неопределено;
	КонецЕсли;
	
	ОбновитьВерсиюПодсистемыСервер(ИскомыйУзел.browser_download_url);
	// предложить перезагрузить

КонецФункции // ОбновитьВерсиюПодсистемыАсинх()

&НаСервереБезКонтекста
Процедура ОбновитьВерсиюПодсистемыСервер(УРЛ)
	скт_ПоддержкаСервер.ЗагрузитьНовуюВерсиюРасширения(УРЛ);
КонецПроцедуры // ОбновитьВерсиюПодсистемыСервер()


#КонецОбласти